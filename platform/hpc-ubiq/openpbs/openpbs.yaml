---
# Copyright 2023 Logicalis UKI. All Rights Reserved.
#
# Licensed under the Functional Source License, Version 1.0, Apache 2.0 Change License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/logicalisuki/ubiquity/blob/main/LICENSE.md
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# It also allows for the transition of this software to an Apache 2.0 Licence
# on the second anniversary of the date we make the software available.
# See the License for the specific language governing permissions and
# limitations under the License.

----
apiVersion: v1
kind: Service
metadata:
  name: nodes
  namespace: hpc-ubiq
spec:
  selector:
    net: headless
  clusterIP: None

----
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hpc-node
  namespace: hpc-ubiq
  labels:
     name: hpc-node
spec:
  selector:
    matchLabels:
      app: openpbs-node
  serviceName: "nodes"
  replicas: 2
  template:
    metadata:
      labels:
        app: openpbs-node
        net: headless
        role: compute-node
        partition: COMPUTE
    spec:
      initContainers:
      - name: openpbs-init
        image: cjcshadowsan/openpbsinit
        command: ["/usr/local/bin/python"]
        args: ["generate_pbs_conf_node.py"]
        volumeMounts:
        - mountPath: /pbsconf
          name: pbsconf
      containers:
      - name: openpbs-node
        image: cjcshadowsan/openpbs
        command: ["/bin/bash"]
        args: ["start-mom.sh"]
        resources:
          limits:
            cpu: "2"
          requests:
            cpu: "2"
        volumeMounts:
        - mountPath: /pbsconf
          name: pbsconf
        - mountPath: /home
          name: home
        securityContext:
          privileged: true
#      imagePullSecrets:
#      - name: regcred
      volumes:
      - name: pbsconf
        emptyDir: {}
      - name: home
        persistentVolumeClaim:
          claimName: pvc-nfs-home
      dnsConfig:
        searches:
          - nodes.hpc-ubiq.svc.cluster.local

----
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: control-node
  namespace: hpc-ubiq
  labels:
     name: control-node
spec:
  selector:
    matchLabels:
      app: openpbs-server
  serviceName: "nodes"
  replicas: 1
  template:
    metadata:
      labels:
        app: openpbs-server
        role: control-node
        net: headless
    spec:
      initContainers:
      - name: openpbs-init
        image: cjcshadowsan/openpbsinit
        command: ["/usr/local/bin/python"]
        args: ["generate_pbs_conf_server.py"]
        volumeMounts:
        - mountPath: /pbsconf
          name: pbsconf
      containers:
      - name: openpbs-server
        image: cjcshadowsan/openpbs
        command: ["/bin/bash"]
        args: ["start-pbs.sh"]
        volumeMounts:
        - mountPath: /pbsconf
          name: pbsconf
        - mountPath: /home
          name: home
      - name: openpbs-conf
        image: cjcshadowsan/openpbsconf
        command: ["/usr/local/bin/python"]
        args: ["generate_pbs_conf.py"]
        volumeMounts:
        - mountPath: /pbsconf
          name: pbsconf
#      imagePullSecrets:
#      - name: regcred
      volumes:
      - name: pbsconf
        emptyDir: {}
      - name: home
        persistentVolumeClaim:
          claimName: pvc-nfs-home
      dnsConfig:
        searches:
          - nodes.hpc-ubiq.svc.cluster.local
